Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups: 
      - 
        Label: 
          default: 'CloudFront configuration'
        Parameters: 
          - OriginDomainName
          - ApplicationDomainName
          - isApplicationDomainNameR53Hosted
          - Route53HostedZoneId
          - ProvidedTLSCertificateArn
    ParameterLabels:
      OriginDomainName:
        default: Enter the domain name of your origin
      ApplicationDomainName:
        default: Enter the public domain name of your application
      isApplicationDomainNameR53Hosted:
        default: Automatic TLS certificate generation
      Route53HostedZoneId:
        default: ID of your Route53 hosted zone acting as the authoritative DNS for your application domain name
      ProvidedTLSCertificateArn:
        default: ARN of the TLS certificate in ACM covering your application domain name
Parameters:
  OriginDomainName:
    Type: String
    Description: This domain name name will be used by CloudFront to send requests to your origin servers over HTTPS.
    Default: e.g. my-obfuscated-origin-x5k9d.example.com
  ApplicationDomainName:
    Type: String
    Description: This domain name name will be used by users to access your application.
    Default: e.g. www.example.com
  isApplicationDomainNameR53Hosted:
    Type: String
    Default: yes
    AllowedValues: [ yes, no ]
  Route53HostedZoneId:
    Type: String
    Description: If you selected 'yes' for the 'Automatic TLS certificate generation' parameter, the template will automatically generate a TLS certificate covering your application domain name, assuming that this domain is hosted on Route 53 in the same account. Provide the ID of the corresponding Route 53 Hosted Zone.
    Default: e.g. ZAUMRCAXR2R0D
  ProvidedTLSCertificateArn:
    Type: String
    Description: (e.g. arn:aws:acm:us-east-1:556906777000:certificate/00b90ed9-230f-ff80-8364-f5f452mf6253). If you selected 'yes' for the 'Automatic TLS certificate generation' parameter, provide the TLS certificate configured in ACM in us-east-1, and covering your application domain name.
Conditions:
  AutomaticTLSCertGenrationEnabled: !Equals [ !Ref isApplicationDomainNameR53Hosted, yes ]
Resources:
# Only generate a TLS certificate using ACM if needed
  generatedTlsCertificate: 
    Type: AWS::CertificateManager::Certificate
    Condition : AutomaticTLSCertGenrationEnabled
    Properties: 
      DomainName: !Ref ApplicationDomainName
      DomainValidationOptions:
        - DomainName: !Ref ApplicationDomainName
          HostedZoneId: !Ref Route53HostedZoneId
      ValidationMethod: DNS 
# Cache policy for static text based files
  staticCachePolicyWithCompression:
    Type: AWS::CloudFront::CachePolicy
    Properties: 
      CachePolicyConfig: 
        Comment: 'Cache policy for static content with gzip/br compression'
        DefaultTTL: 259200
        MaxTTL: 31536000
        MinTTL: 0
        Name: !Join ['-', [!Select [2, !Split ['/', !Ref AWS::StackId]], 'staticCachePolicyWithCompression']]
        ParametersInCacheKeyAndForwardedToOrigin: 
          CookiesConfig: 
            CookieBehavior: none
          EnableAcceptEncodingBrotli: True
          EnableAcceptEncodingGzip: True
          HeadersConfig: 
            HeaderBehavior: none
          QueryStringsConfig: 
            QueryStringBehavior: none
# Cache policy for static onn compressible files
  staticCachePolicyWithoutCompression:
    Type: AWS::CloudFront::CachePolicy
    Properties: 
      CachePolicyConfig: 
        Comment: 'Cache policy for static content with no compression'
        DefaultTTL: 259200
        MaxTTL: 31536000
        MinTTL: 0
        Name: !Join ['-', [!Select [2, !Split ['/', !Ref AWS::StackId]], 'staticCachePolicyWithoutCompression']]
        ParametersInCacheKeyAndForwardedToOrigin: 
          CookiesConfig: 
            CookieBehavior: none
          EnableAcceptEncodingBrotli: False
          EnableAcceptEncodingGzip: False
          HeadersConfig: 
            HeaderBehavior: none
          QueryStringsConfig:
            QueryStringBehavior: none
# CloudFront distribution
  cloudfrontConfig:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Aliases:
          - !Ref ApplicationDomainName
        ViewerCertificate:
          AcmCertificateArn: !If [ AutomaticTLSCertGenrationEnabled, !Ref generatedTlsCertificate, !Ref ProvidedTLSCertificateArn] 
          MinimumProtocolVersion: TLSv1.2_2021
          SslSupportMethod: sni-only
        Comment: 'Template - Accelerate and protect dynamic websites'
        DefaultCacheBehavior:
          CachePolicyId: 4135ea2d-6df8-44a3-9df3-4b5a84be39ad
          OriginRequestPolicyId: b689b0a8-53d0-40ab-baf2-68738e2966ac
          ResponseHeadersPolicyId: 67f7725c-6f97-4210-82d7-5512b31e9d03
          AllowedMethods: 
            - GET
            - HEAD
            - OPTIONS
            - PUT
            - POST
            - DELETE
            - PATCH
          TargetOriginId: customOrigin
          ViewerProtocolPolicy: redirect-to-https
        CacheBehaviors:
          - PathPattern: '*.jpg'
            CachePolicyId: !Ref staticCachePolicyWithoutCompression
            ResponseHeadersPolicyId: 67f7725c-6f97-4210-82d7-5512b31e9d03
            AllowedMethods: 
              - GET
              - HEAD
              - OPTIONS
              - PUT
              - POST
              - DELETE
              - PATCH
            CachedMethods:
              - GET
              - HEAD
            TargetOriginId: customOrigin
            ViewerProtocolPolicy: redirect-to-https
          - PathPattern: '*.jpeg'
            CachePolicyId: !Ref staticCachePolicyWithoutCompression
            ResponseHeadersPolicyId: 67f7725c-6f97-4210-82d7-5512b31e9d03
            AllowedMethods: 
              - GET
              - HEAD
              - OPTIONS
              - PUT
              - POST
              - DELETE
              - PATCH              
            CachedMethods:
              - GET
              - HEAD
            TargetOriginId: customOrigin
            ViewerProtocolPolicy: redirect-to-https
          - PathPattern: '*.png'
            CachePolicyId: !Ref staticCachePolicyWithoutCompression
            ResponseHeadersPolicyId: 67f7725c-6f97-4210-82d7-5512b31e9d03
            AllowedMethods: 
              - GET
              - HEAD
              - OPTIONS
              - PUT
              - POST
              - DELETE
              - PATCH              
            CachedMethods:
              - GET
              - HEAD
            TargetOriginId: customOrigin
            ViewerProtocolPolicy: redirect-to-https
          - PathPattern: '*.ico'
            CachePolicyId: !Ref staticCachePolicyWithoutCompression
            ResponseHeadersPolicyId: 67f7725c-6f97-4210-82d7-5512b31e9d03
            AllowedMethods: 
              - GET
              - HEAD
              - OPTIONS
              - PUT
              - POST
              - DELETE
              - PATCH
            CachedMethods:
              - GET
              - HEAD
            TargetOriginId: customOrigin
            ViewerProtocolPolicy: redirect-to-https
          - PathPattern: '*.gif'
            CachePolicyId: !Ref staticCachePolicyWithoutCompression
            ResponseHeadersPolicyId: 67f7725c-6f97-4210-82d7-5512b31e9d03
            AllowedMethods: 
              - GET
              - HEAD
              - OPTIONS
              - PUT
              - POST
              - DELETE
              - PATCH
            CachedMethods:
              - GET
              - HEAD
            TargetOriginId: customOrigin
            ViewerProtocolPolicy: redirect-to-https
          - PathPattern: '*.bmp'
            CachePolicyId: !Ref staticCachePolicyWithoutCompression
            ResponseHeadersPolicyId: 67f7725c-6f97-4210-82d7-5512b31e9d03
            AllowedMethods: 
              - GET
              - HEAD
              - OPTIONS
              - PUT
              - POST
              - DELETE
              - PATCH
            CachedMethods:
              - GET
              - HEAD
            TargetOriginId: customOrigin
            ViewerProtocolPolicy: redirect-to-https
          - PathPattern: '*.webp'
            CachePolicyId: !Ref staticCachePolicyWithoutCompression
            ResponseHeadersPolicyId: 67f7725c-6f97-4210-82d7-5512b31e9d03
            AllowedMethods: 
              - GET
              - HEAD
              - OPTIONS
              - PUT
              - POST
              - DELETE
              - PATCH
            CachedMethods:
              - GET
              - HEAD
            TargetOriginId: customOrigin
            ViewerProtocolPolicy: redirect-to-https
          - PathPattern: '*.svg'
            CachePolicyId: !Ref staticCachePolicyWithoutCompression
            ResponseHeadersPolicyId: 67f7725c-6f97-4210-82d7-5512b31e9d03
            AllowedMethods: 
              - GET
              - HEAD
              - OPTIONS
              - PUT
              - POST
              - DELETE
              - PATCH
            CachedMethods:
              - GET
              - HEAD
            TargetOriginId: customOrigin
            ViewerProtocolPolicy: redirect-to-https
          - PathPattern: '*.tiff'
            CachePolicyId: !Ref staticCachePolicyWithoutCompression
            ResponseHeadersPolicyId: 67f7725c-6f97-4210-82d7-5512b31e9d03
            AllowedMethods: 
              - GET
              - HEAD
              - OPTIONS
              - PUT
              - POST
              - DELETE
              - PATCH
            CachedMethods:
              - GET
              - HEAD
            TargetOriginId: customOrigin
            ViewerProtocolPolicy: redirect-to-https
          - PathPattern: '*.woff'
            CachePolicyId: !Ref staticCachePolicyWithoutCompression
            ResponseHeadersPolicyId: 67f7725c-6f97-4210-82d7-5512b31e9d03
            AllowedMethods: 
              - GET
              - HEAD
              - OPTIONS
              - PUT
              - POST
              - DELETE
              - PATCH
            CachedMethods:
              - GET
              - HEAD
            TargetOriginId: customOrigin
            ViewerProtocolPolicy: redirect-to-https
          - PathPattern: '*.woff2'
            CachePolicyId: !Ref staticCachePolicyWithoutCompression
            ResponseHeadersPolicyId: 67f7725c-6f97-4210-82d7-5512b31e9d03
            AllowedMethods: 
              - GET
              - HEAD
              - OPTIONS
              - PUT
              - POST
              - DELETE
              - PATCH
            CachedMethods:
              - GET
              - HEAD
            TargetOriginId: customOrigin
            ViewerProtocolPolicy: redirect-to-https
          - PathPattern: '*.mp3'
            CachePolicyId: !Ref staticCachePolicyWithoutCompression
            ResponseHeadersPolicyId: 67f7725c-6f97-4210-82d7-5512b31e9d03
            AllowedMethods: 
              - GET
              - HEAD
              - OPTIONS
              - PUT
              - POST
              - DELETE
              - PATCH
            CachedMethods:
              - GET
              - HEAD
            TargetOriginId: customOrigin
            ViewerProtocolPolicy: redirect-to-https
          - PathPattern: '*.mp4'
            CachePolicyId: !Ref staticCachePolicyWithoutCompression
            ResponseHeadersPolicyId: 67f7725c-6f97-4210-82d7-5512b31e9d03
            AllowedMethods: 
              - GET
              - HEAD
              - OPTIONS
              - PUT
              - POST
              - DELETE
              - PATCH
            CachedMethods:
              - GET
              - HEAD
            TargetOriginId: customOrigin
            ViewerProtocolPolicy: redirect-to-https
          - PathPattern: '*.mov'
            CachePolicyId: !Ref staticCachePolicyWithoutCompression
            ResponseHeadersPolicyId: 67f7725c-6f97-4210-82d7-5512b31e9d03
            AllowedMethods: 
              - GET
              - HEAD
              - OPTIONS
              - PUT
              - POST
              - DELETE
              - PATCH
            CachedMethods:
              - GET
              - HEAD
            TargetOriginId: customOrigin
            ViewerProtocolPolicy: redirect-to-https
          - PathPattern: '*.aif'
            CachePolicyId: !Ref staticCachePolicyWithoutCompression
            ResponseHeadersPolicyId: 67f7725c-6f97-4210-82d7-5512b31e9d03
            AllowedMethods: 
              - GET
              - HEAD
              - OPTIONS
              - PUT
              - POST
              - DELETE
              - PATCH
            CachedMethods:
              - GET
              - HEAD
            TargetOriginId: customOrigin
            ViewerProtocolPolicy: redirect-to-https
          - PathPattern: '*.wav'
            CachePolicyId: !Ref staticCachePolicyWithoutCompression
            ResponseHeadersPolicyId: 67f7725c-6f97-4210-82d7-5512b31e9d03
            AllowedMethods: 
              - GET
              - HEAD
              - OPTIONS
              - PUT
              - POST
              - DELETE
              - PATCH
            CachedMethods:
              - GET
              - HEAD
            TargetOriginId: customOrigin
            ViewerProtocolPolicy: redirect-to-https
          - PathPattern: '*.zip'
            CachePolicyId: !Ref staticCachePolicyWithoutCompression
            ResponseHeadersPolicyId: 67f7725c-6f97-4210-82d7-5512b31e9d03
            AllowedMethods: 
              - GET
              - HEAD
              - OPTIONS
              - PUT
              - POST
              - DELETE
              - PATCH
            CachedMethods:
              - GET
              - HEAD
            TargetOriginId: customOrigin
            ViewerProtocolPolicy: redirect-to-https
          - PathPattern: '*.pdf'
            CachePolicyId: !Ref staticCachePolicyWithoutCompression
            ResponseHeadersPolicyId: 67f7725c-6f97-4210-82d7-5512b31e9d03
            AllowedMethods: 
              - GET
              - HEAD
              - OPTIONS
              - PUT
              - POST
              - DELETE
              - PATCH
            CachedMethods:
              - GET
              - HEAD
            TargetOriginId: customOrigin
            ViewerProtocolPolicy: redirect-to-https
          - PathPattern: '*.doc'
            CachePolicyId: !Ref staticCachePolicyWithoutCompression
            ResponseHeadersPolicyId: 67f7725c-6f97-4210-82d7-5512b31e9d03
            AllowedMethods: 
              - GET
              - HEAD
              - OPTIONS
              - PUT
              - POST
              - DELETE
              - PATCH
            CachedMethods:
              - GET
              - HEAD
            TargetOriginId: customOrigin
            ViewerProtocolPolicy: redirect-to-https
          - PathPattern: '*.js'
            CachePolicyId: !Ref staticCachePolicyWithCompression
            ResponseHeadersPolicyId: 67f7725c-6f97-4210-82d7-5512b31e9d03
            AllowedMethods: 
              - GET
              - HEAD
              - OPTIONS
              - PUT
              - POST
              - DELETE
              - PATCH
            CachedMethods:
              - GET
              - HEAD
            TargetOriginId: customOrigin
            ViewerProtocolPolicy: redirect-to-https
            Compress: True
          - PathPattern: '*.css'
            CachePolicyId: !Ref staticCachePolicyWithCompression
            ResponseHeadersPolicyId: 67f7725c-6f97-4210-82d7-5512b31e9d03
            AllowedMethods: 
              - GET
              - HEAD
              - OPTIONS
              - PUT
              - POST
              - DELETE
              - PATCH
            CachedMethods:
              - GET
              - HEAD
            TargetOriginId: customOrigin
            ViewerProtocolPolicy: redirect-to-https
            Compress: True
          - PathPattern: '*.txt'
            CachePolicyId: !Ref staticCachePolicyWithCompression
            ResponseHeadersPolicyId: 67f7725c-6f97-4210-82d7-5512b31e9d03
            AllowedMethods: 
              - GET
              - HEAD
              - OPTIONS
              - PUT
              - POST
              - DELETE
              - PATCH
            CachedMethods:
              - GET
              - HEAD
            TargetOriginId: customOrigin
            ViewerProtocolPolicy: redirect-to-https
            Compress: True
        Enabled: true
        HttpVersion: http2and3
        IPV6Enabled: true
        Origins:
          - DomainName:
              Ref: OriginDomainName
            Id: customOrigin
            OriginCustomHeaders:
              - HeaderName: 'X-Shared-Secret'
                HeaderValue: !Select [2, !Split ['/', !Ref AWS::StackId]]
            CustomOriginConfig: 
              HTTPSPort: 443
              OriginKeepaliveTimeout: 30
              OriginProtocolPolicy: https-only
        WebACLId:
          Fn::GetAtt:
            - wafConfig
            - Arn
# WAF WebACL
  wafConfig:
    Type: AWS::WAFv2::WebACL
    Properties:
      DefaultAction:
        Allow: {}
      Scope: CLOUDFRONT
      VisibilityConfig:
        CloudWatchMetricsEnabled: True
        MetricName: webACL
        SampledRequestsEnabled: True
      Rules:
        - Name: AWS-AWSManagedRulesCommonRuleSet
          OverrideAction:
            None: {}
          Priority: 1
          Statement:
            ManagedRuleGroupStatement:
              Name: AWSManagedRulesCommonRuleSet
              VendorName: AWS
          VisibilityConfig:
            CloudWatchMetricsEnabled: True
            MetricName: AWSManagedRulesCommonRuleSet
            SampledRequestsEnabled: True
        - Name: AWS-AWSManagedRulesKnownBadInputsRuleSet
          OverrideAction:
            None: {}
          Priority: 2
          Statement:
            ManagedRuleGroupStatement:
              Name: AWSManagedRulesKnownBadInputsRuleSet
              VendorName: AWS
          VisibilityConfig:
            CloudWatchMetricsEnabled: True
            MetricName: AWSManagedRulesKnownBadInputsRuleSet
            SampledRequestsEnabled: True
        - Name: AWS-AWSManagedRulesAmazonIpReputationList
          OverrideAction:
            Count: {}
          Priority: 3
          Statement:
            ManagedRuleGroupStatement:
              Name: AWSManagedRulesAmazonIpReputationList
              VendorName: AWS
          VisibilityConfig:
            CloudWatchMetricsEnabled: True
            MetricName: AWSManagedRulesAmazonIpReputationList
            SampledRequestsEnabled: True
        - Name: Custom-RateLimitSuspiciousIPs
          Action:
            Block: {}
          Priority: 4
          Statement:
            RateBasedStatement:
              AggregateKeyType: CUSTOM_KEYS
              CustomKeys:
                - LabelNamespace:
                    Namespace: 'awswaf:managed:aws:amazon-ip-list:'
              Limit: 500
          VisibilityConfig:
            CloudWatchMetricsEnabled: True
            MetricName: RateLimitSuspiciousIPs
            SampledRequestsEnabled: True
        - Name: Custom-BlanketRateLimiting
          Action:
            Block: {}
          Priority: 5
          Statement:
            RateBasedStatement:
              AggregateKeyType: IP
              Limit: 10000
          VisibilityConfig:
            CloudWatchMetricsEnabled: True
            MetricName: BlanketRateLimiting
            SampledRequestsEnabled: True


Outputs:
  CloudFrontDomainName:
    Description: The domain name generated by CloudFront. Point your application domain name to this CloudFront domain name in your DNS server to start proxiying traffic through CloudFront.
    Value: !GetAtt cloudfrontConfig.DomainName
  SharedSecret:
    Description: Configure your origin server to block any HTTP request that does not have the X-Shared-Secret header with this value.
    Value: !Select [2, !Split ['/', !Ref AWS::StackId]]
